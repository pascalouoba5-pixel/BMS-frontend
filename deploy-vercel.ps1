# Script PowerShell pour d√©ployer le frontend BMS sur Vercel
Write-Host "üöÄ D√©ploiement du Frontend BMS sur Vercel..." -ForegroundColor Green
Write-Host ""

# V√©rifier que nous sommes dans le bon r√©pertoire
if (-not (Test-Path "package.json")) {
    Write-Host "‚ùå Erreur: Ce script doit √™tre ex√©cut√© depuis le dossier frontend" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ R√©pertoire frontend d√©tect√©" -ForegroundColor Green

# V√©rifier que Vercel CLI est install√©
try {
    $vercelVersion = vercel --version 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Vercel CLI d√©tect√©: $vercelVersion" -ForegroundColor Green
    } else {
        throw "Vercel CLI non trouv√©"
    }
} catch {
    Write-Host "‚ùå Vercel CLI non install√©. Installation en cours..." -ForegroundColor Red
    npm install -g vercel
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Erreur lors de l'installation de Vercel CLI" -ForegroundColor Red
        exit 1
    }
}

# V√©rifier la configuration
Write-Host ""
Write-Host "üîß V√©rification de la configuration..." -ForegroundColor Yellow

$configFiles = @(
    "vercel.json",
    "next.config.ts",
    "package.json"
)

foreach ($file in $configFiles) {
    if (Test-Path $file) {
        Write-Host "‚úÖ $file" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $file manquant" -ForegroundColor Red
        exit 1
    }
}

# V√©rifier les variables d'environnement
Write-Host ""
Write-Host "üåç Configuration des variables d'environnement..." -ForegroundColor Yellow

$envVars = @{
    "NEXT_PUBLIC_API_URL" = "https://bms-backend-9k8n.onrender.com"
    "NEXT_PUBLIC_APP_NAME" = "BMS Frontend"
    "NODE_ENV" = "production"
}

foreach ($key in $envVars.Keys) {
    Write-Host "   $key = $($envVars[$key])" -ForegroundColor Cyan
}

# Nettoyer le projet
Write-Host ""
Write-Host "üßπ Nettoyage du projet..." -ForegroundColor Yellow

if (Test-Path ".next") {
    Remove-Item -Path ".next" -Recurse -Force
    Write-Host "‚úÖ Dossier .next supprim√©" -ForegroundColor Green
}

if (Test-Path "node_modules") {
    Write-Host "‚ö†Ô∏è  node_modules d√©tect√© - sera g√©r√© par Vercel" -ForegroundColor Yellow
}

# Instructions de d√©ploiement
Write-Host ""
Write-Host "üöÄ Instructions de d√©ploiement:" -ForegroundColor Green
Write-Host "1. Se connecter √† Vercel: vercel login" -ForegroundColor White
Write-Host "2. D√©ployer: vercel --prod" -ForegroundColor White
Write-Host "3. Ou d√©ployer avec configuration: vercel --prod --yes" -ForegroundColor White

Write-Host ""
Write-Host "üîß Configuration recommand√©e lors du d√©ploiement:" -ForegroundColor Yellow
Write-Host "- Framework: Next.js" -ForegroundColor White
Write-Host "- Build Command: npm run build" -ForegroundColor White
Write-Host "- Output Directory: .next" -ForegroundColor White
Write-Host "- Install Command: npm install" -ForegroundColor White

Write-Host ""
Write-Host "üåç Variables d'environnement √† configurer sur Vercel:" -ForegroundColor Yellow
Write-Host "- NEXT_PUBLIC_API_URL = https://bms-backend-9k8n.onrender.com" -ForegroundColor Cyan
Write-Host "- NODE_ENV = production" -ForegroundColor Cyan

# D√©marrer le d√©ploiement
Write-Host ""
Write-Host "üéØ Voulez-vous d√©marrer le d√©ploiement maintenant ? (O/N)" -ForegroundColor Green
$response = Read-Host

if ($response -eq "O" -or $response -eq "o" -or $response -eq "Y" -or $response -eq "y") {
    Write-Host ""
    Write-Host "üöÄ D√©marrage du d√©ploiement..." -ForegroundColor Green
    
    try {
        # V√©rifier la connexion
        Write-Host "üì° V√©rification de la connexion Vercel..." -ForegroundColor Yellow
        vercel whoami
        
        # D√©ployer
        Write-Host "üì§ D√©ploiement en cours..." -ForegroundColor Yellow
        vercel --prod --yes
        
    } catch {
        Write-Host "‚ùå Erreur lors du d√©ploiement: $($_.Exception.Message)" -ForegroundColor Red
        Write-Host "üí° Essayez de vous connecter d'abord: vercel login" -ForegroundColor Yellow
    }
} else {
    Write-Host ""
    Write-Host "‚ÑπÔ∏è  D√©ploiement annul√©. Ex√©cutez manuellement:" -ForegroundColor Yellow
    Write-Host "   vercel --prod" -ForegroundColor White
}

Write-Host ""
Write-Host "‚úÖ Script termin√© !" -ForegroundColor Green

# Garder la fen√™tre ouverte
Read-Host "Appuyez sur Entr√©e pour fermer..."
