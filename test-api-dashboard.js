const API_BASE_URL = 'http://localhost:5000';

async function testDashboardAPI() {
  try {
    console.log('üß™ Test de l\'API Dashboard...');
    console.log('URL de test:', `${API_BASE_URL}/api/dashboard/complete?period=month`);
    
    // Test 1: V√©rifier si le serveur r√©pond
    console.log('\nüì° Test 1: Connexion au serveur');
    try {
      const response = await fetch(`${API_BASE_URL}/api/dashboard/complete?period=month`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'Bearer test-token'
        }
      });
      
      console.log('‚úÖ Serveur accessible');
      console.log('Status:', response.status);
      console.log('Headers:', Object.fromEntries(response.headers.entries()));
      
      if (response.ok) {
        const data = await response.json();
        console.log('‚úÖ Donn√©es re√ßues:', {
          success: data.success,
          hasData: !!data.data,
          stats: data.data?.stats ? 'Pr√©sent' : 'Manquant',
          commerciaux: data.data?.commerciaux ? 'Pr√©sent' : 'Manquant',
          poles: data.data?.poles ? 'Pr√©sent' : 'Manquant',
          resultats: data.data?.resultats ? 'Pr√©sent' : 'Manquant'
        });
        
        if (data.data?.stats) {
          console.log('üìä Statistiques:', data.data.stats);
        }
      } else {
        console.log('‚ùå Erreur HTTP:', response.status);
        const errorText = await response.text();
        console.log('D√©tails de l\'erreur:', errorText);
      }
      
    } catch (fetchError) {
      console.log('‚ùå Erreur de connexion:', fetchError.message);
      
      if (fetchError.code === 'ECONNREFUSED') {
        console.log('üí° Le serveur backend n\'est pas d√©marr√©');
        console.log('üí° D√©marrer avec: cd backend && npm start');
      } else if (fetchError.message.includes('fetch')) {
        console.log('üí° Erreur de r√©seau ou CORS');
      }
    }
    
    // Test 2: V√©rifier les routes disponibles
    console.log('\nüîç Test 2: Routes disponibles');
    const routes = [
      '/api/dashboard/stats',
      '/api/dashboard/commerciaux',
      '/api/dashboard/poles',
      '/api/dashboard/resultats',
      '/api/dashboard/complete'
    ];
    
    for (const route of routes) {
      try {
        const response = await fetch(`${API_BASE_URL}${route}?period=month`, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': 'Bearer test-token'
          }
        });
        
        console.log(`${response.ok ? '‚úÖ' : '‚ùå'} ${route}: ${response.status}`);
        
        if (!response.ok) {
          const errorText = await response.text();
          console.log(`  Erreur: ${errorText}`);
        }
      } catch (error) {
        console.log(`‚ùå ${route}: ${error.message}`);
      }
      
      // Attendre un peu entre les requ√™tes
      await new Promise(resolve => setTimeout(resolve, 100));
    }
    
    // Test 3: V√©rifier la base de donn√©es
    console.log('\nüóÑÔ∏è Test 3: V√©rification de la base de donn√©es');
    try {
      const response = await fetch(`${API_BASE_URL}/api/dashboard/stats?period=month`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'Bearer test-token'
        }
      });
      
      if (response.ok) {
        const data = await response.json();
        console.log('‚úÖ Base de donn√©es accessible');
        console.log('Donn√©es:', data);
      } else {
        console.log('‚ùå Erreur base de donn√©es:', response.status);
      }
    } catch (error) {
      console.log('‚ùå Erreur base de donn√©es:', error.message);
    }
    
    console.log('\nüéØ Diagnostic termin√© !');
    console.log('\nüí° Solutions possibles:');
    console.log('1. V√©rifier que le serveur backend est d√©marr√© (port 5000)');
    console.log('2. V√©rifier la connexion √† la base de donn√©es');
    console.log('3. V√©rifier les logs du serveur backend');
    console.log('4. V√©rifier que la table "offres" existe et contient des donn√©es');
    
  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error.message);
  }
}

// Ex√©cuter le test
testDashboardAPI();
